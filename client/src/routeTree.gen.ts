/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const SignUpIndexLazyImport = createFileRoute('/sign-up/')()
const SignInIndexLazyImport = createFileRoute('/sign-in/')()
const HomeIndexLazyImport = createFileRoute('/home/')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SignUpIndexLazyRoute = SignUpIndexLazyImport.update({
  path: '/sign-up/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up/index.lazy').then((d) => d.Route))

const SignInIndexLazyRoute = SignInIndexLazyImport.update({
  path: '/sign-in/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-in/index.lazy').then((d) => d.Route))

const HomeIndexLazyRoute = HomeIndexLazyImport.update({
  path: '/home/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      preLoaderRoute: typeof HomeIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-in/': {
      preLoaderRoute: typeof SignInIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up/': {
      preLoaderRoute: typeof SignUpIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  HomeIndexLazyRoute,
  SignInIndexLazyRoute,
  SignUpIndexLazyRoute,
])

/* prettier-ignore-end */
